/*buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.sonarqube.gradle:gradle-sonarqube-plugin:1.1")
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}*/

def version_num = '2.1.2'

version = version_num
ext.archivesBaseName = 'sub-taxonomy-client'

apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'

group = 'uk.ac.ebi.ena.taxonomy'

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    testCompile "junit:junit:4.11"
      compile 'commons-collections:commons-collections:3.2.1'
    compile 'org.apache.commons:commons-lang3:3.0'
  compile 'commons-dbutils:commons-dbutils:1.5'
  compile 'commons-lang:commons-lang:2.6'
  compile 'com.beust:jcommander:1.7'
  compile 'org.json:json:20131018'
}

jar {
    manifest {
        attributes(
                "Implementation-Title": archivesBaseName,
                'Implementation-Version': version,
                'Source-Compatibility': project.sourceCompatibility,
                'Target-Compatibility': project.targetCompatibility
        )
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

artifacts {
    archives javadocJar
    archives jar
    archives sourceJar
}

signing {
    sign configurations.archives
}


task wrapper(type: Wrapper) { gradleVersion = '2.9' }

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name archivesBaseName
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'ENA Taxonomy Service'
                url 'ena taxonomy service'

                scm {
                    url 'https://github.com/enasequence/ena-taxonomy-client'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                       id 'neilg'
                        name 'Daniel Vaughan'
                        email 'dvaughan@ebi.ac.uk'
                    }
                }
            }
        }
    }
}

/*nexusStaging {
    packageGroup = "uk.ac.ebi.ena.taxonomy"
}*/


